{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onModalButtonClick","isModalButtonClicked","useState","selectedTodoId","setSelectedTodoId","checkIfModalButonClicked","todoId","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","onSelectClick","onInputChange","query","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","todoModal","onCloseModalButtonClick","user","setUser","useEffect","fetchUserFromAPI","a","userId","Error","href","email","name","App","setTodos","selectedValue","setSelectedValue","setQuery","setTodoModal","setIsModalButtonClicked","fetchTodosFromAPI","visibleTodos","filter","normalizedQuery","toLowerCase","trim","includes","getVisibleTodos","input","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02a9c9b6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onModalButtonClick: (todo: Todo) => void;\n  isModalButtonClicked: boolean,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onModalButtonClick,\n  isModalButtonClicked,\n}) => {\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n  const onClick = (todo: Todo) => {\n    setSelectedTodoId(todo.id);\n    onModalButtonClick(todo);\n  };\n\n  const checkIfModalButonClicked = (todoId: number) => {\n    return isModalButtonClicked && todoId === selectedTodoId;\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': checkIfModalButonClicked(todo.id),\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed ? (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              ) : ''}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': !checkIfModalButonClicked(todo.id),\n                    'fa-eye-slash': checkIfModalButonClicked(todo.id),\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  onSelectClick: (value: string) => void,\n  onInputChange: (input: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSelectClick,\n  onInputChange,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => onSelectClick(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => onInputChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onInputChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n\nexport const getVisibleTodos = (\n  todos: Todo[],\n  selectedValue: string,\n  query: string,\n) => {\n  let visibleTodos = todos;\n\n  switch (selectedValue) {\n    case 'active':\n      visibleTodos = todos.filter(todo => !todo.completed);\n      break;\n\n    case 'completed':\n      visibleTodos = todos.filter(todo => todo.completed);\n      break;\n\n    case 'all':\n    default:\n      break;\n  }\n\n  if (query) {\n    const normalizedQuery = query.toLowerCase().trim();\n\n    return visibleTodos.filter(todo => todo.title.includes(normalizedQuery));\n  }\n\n  return visibleTodos;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todoModal: Todo | null;\n  onCloseModalButtonClick: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todoModal,\n  onCloseModalButtonClick,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchUserFromAPI = async () => {\n      try {\n        if (todoModal !== null) {\n          setUser(await getUser(todoModal.userId));\n        }\n      } catch (error) {\n        throw new Error('Error fetching user');\n      }\n    };\n\n    fetchUserFromAPI();\n  }, [todoModal]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!todoModal || !user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoModal.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onCloseModalButtonClick()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoModal.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todoModal.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos, getVisibleTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedValue, setSelectedValue] = useState('all');\n  const [query, setQuery] = useState('');\n  const [todoModal, setTodoModal] = useState<Todo | null>(null);\n  const [isModalButtonClicked, setIsModalButtonClicked] = useState(false);\n\n  useEffect(() => {\n    const fetchTodosFromAPI = async () => {\n      try {\n        setTodos(await getTodos());\n      } catch (error) {\n        throw new Error('Error fetching todos');\n      }\n    };\n\n    fetchTodosFromAPI();\n  }, []);\n\n  const visibleTodos = getVisibleTodos(todos, selectedValue, query);\n\n  const onSelectClick = (value: string) => {\n    setSelectedValue(value);\n  };\n\n  const onInputChange = (input: string) => {\n    setQuery(input);\n  };\n\n  const onModalButtonClick = (todo: Todo) => {\n    setIsModalButtonClicked(true);\n    setTodoModal(todo);\n  };\n\n  const onCloseModalButtonClick = () => {\n    setIsModalButtonClicked(false);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelectClick={onSelectClick}\n                onInputChange={onInputChange}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    onModalButtonClick={onModalButtonClick}\n                    isModalButtonClicked={isModalButtonClicked}\n                  />\n                ) : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalButtonClicked && (\n        <TodoModal\n          todoModal={todoModal}\n          onCloseModalButtonClick={onCloseModalButtonClick}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}